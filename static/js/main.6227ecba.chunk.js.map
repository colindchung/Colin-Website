{"version":3,"sources":["Body/arduino.js","Body/game.js","Body/home.js","Body/simulation.js","Body/utilities.js","Body/web.js","Body/wood.js","index.js"],"names":["Arduino","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","href","target","rel","src","alt","controls","React","Component","Game","Home","Simulation","Utilities","class","Web","Wood","Header","props","_this","call","state","title","changeTitle","bind","assertThisInitialized","newName","setState","_this2","onClick","src_Body","Body","_this3","updateBody","home_Home","web_Web","utilities_Utilities","simulation_Simulation","game_Game","arduino_Arduino","wood_Wood","ToRender","src_Header","ReactDOM","render","src_ToRender","document","getElementById"],"mappings":"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","file":"static/js/main.6227ecba.chunk.js","sourcesContent":["import React from 'react';\r\nimport './general.css';\r\n\r\nexport class Arduino extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <div className=\"border led_distance\">\r\n                    <h3 className=\"subtitle\">LED Distance Sensor</h3>\r\n                    <p><a href=\"https://github.com/colindchung/Arduino_Projects/tree/master/Distance_Sensor\" target=\"_blank\" rel=\"noopener noreferrer\">Visit project repository</a></p>\r\n                    <p>Date Created: March 23, 2019</p>\r\n                    <p>Programming Languages and Techniques Used:</p>\r\n                    <ul>\r\n                        <li>C/C++</li>\r\n                        <li>Arduino Uno</li>\r\n                    </ul>\r\n                    <p className=\"description\">This was an intro LED project. I used a sonar ultrasonic\r\n                        distance sensor to control a panel of LED lights. The ultrasonic sensor sends\r\n                        out an echo signal which can be converted into a measure of distance. Using\r\n                        this distance, I was able to control the number of LED's to turn on in sequence.\r\n                        The following components are required for this project:</p>\r\n                    <ul className=\"description\">\r\n                        <li>Arduino Uno Motherboard (x1)</li>\r\n                        <li>ELEGOO HC-SR04 Ultrasonic Sensor (x1)</li>\r\n                        <li>220 Ohm Resistors (x6)</li>\r\n                        <li>1/6W LED Bulbs (x6)</li>\r\n                        <li>Breadboard (x1)</li>\r\n                        <li>Male to Male Wires (x17)</li>\r\n                    </ul>\r\n                    <p className=\"description\">Schematic:</p>\r\n                    <img src=\"https://drive.google.com/uc?id=1fsJY0Q_IjzVG-ygZovBHXOszxTBXjD3z\" alt=\"Detailed circuit schematic\"/>\r\n                    <br/>\r\n                    <br/>\r\n                    <p className=\"description\">Demo:</p>\r\n                    <br/>\r\n                    <video controls>\r\n                        <source src=\"https://drive.google.com/uc?id=1YSDdPidGH13EENITCfizYb31f6WbW4MO\"/>\r\n                    </video>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './general.css';\r\n\r\nexport class Game extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\" >\r\n                <div className=\"border othello\">\r\n                    <h3 className=\"subtitle\">Interactive Othello Game</h3>\r\n                    <p><a href=\"https://github.com/colindchung/Othello\" target=\"_blank\" rel=\"noopener noreferrer\">Visit project repository</a></p>\r\n                    <p>Date Created: June 12, 2018</p>\r\n                    <p>Programming Languages and Techniques Used:</p>\r\n                    <ul>\r\n                        <li>Java</li>\r\n                        <li>JavaFX Library</li>\r\n                        <li>Graphical User Interface</li>\r\n                        <li>Threading</li>\r\n                        <li>Lambda Expressions</li>\r\n                    </ul>\r\n                    <img src=\"https://drive.google.com/uc?id=1d72pKrQlHSlBwXuU_W_bf9x2SiHvMW6T\" alt=\"Othello cover\"/>\r\n                    <p className=\"description\">For a Grade 12 final project, I recreated the game of\r\n                        Othello (Also known as Reversi). It started with the algorithms to simulate\r\n                        the game in the console output using simple key commands. Afterwards, I \r\n                        integrated JavaFX for user-friendly controls and then I added computer bots\r\n                        to play single player using mulitple difficulty levels.</p>\r\n                    <img src=\"https://drive.google.com/uc?id=1OFXCmP23A6ElrnrPiDjt1UU_rfy48YnL\" alt=\"Demo methods and board\"/>\r\n                    <p className=\"description\">The board is represented as an 8x8 2D array, showed above\r\n                        left. A black piece is denoted by a 'B', a white piece by 'W', and an empty tile\r\n                        by '*'. The game is initialized by creating an empty board and overwriting the\r\n                        middle 4 tiles with alternating colours. The algorithms are carried out user\r\n                        helper functions which do the following:</p>\r\n                    <ul className=\"description\">\r\n                        <li>Check if the game is over</li>\r\n                        <li>Verify if a move is valid</li>\r\n                        <li>Count how many tiles are flipped by a proposed move</li>\r\n                        <li>Perform a move</li>\r\n                        <li>Decide which move the computer makes</li>\r\n                    </ul>\r\n                    <img src=\"https://drive.google.com/uc?id=1s-gCF2rWFaRBuuGz4YC-_Sc7tH0bS6vv\" alt=\"Sample gameboard\"/>\r\n                    <p className=\"description\">I integrated a UI using the JavaFX library. Each tile is a\r\n                        button which calls the algorithm helper functions to perform a move, if legal. At\r\n                        the bottom of the screen is a self-updating scoreboard display which shows how\r\n                        many tiles each player has on the board and a red dot indicating which player's\r\n                        turn it is.</p>\r\n                </div>\r\n                <br/>\r\n                <br/>\r\n                <div className=\"border fileart\">\r\n                    <h3 className=\"subtitle\">File Generated Art</h3>\r\n                    <p><a href=\"https://github.com/colindchung/File_Generated_Art\" target=\"_blank\" rel=\"noopener noreferrer\">Visit project repository</a></p>\r\n                    <p>Date Created: March 11, 2019</p>\r\n                    <p>Programming Languages and Techniques Used:</p>\r\n                    <ul>\r\n                        <li>Java</li>\r\n                        <li>JavaFX Library</li>\r\n                        <li>Graphical User Interface</li>\r\n                        <li>File Reading</li>\r\n                    </ul>\r\n                    <p className=\"description\">This project takes input from files and generates a\r\n                        correspoding image on the JavaFX user interface. The size of the pixels is\r\n                        determined by the number of pixels given in the file. Non-square images are\r\n                        allowed, but they will be scaled to fit in the window. The colour of each pixel\r\n                        is determined by the value of each character in the given file. The colour keys\r\n                        are as follows:</p>\r\n                    <ul className=\"description\">\r\n                        <li>0: Black</li>\r\n                        <li>1: Red</li>\r\n                        <li>2: Blue</li>\r\n                        <li>3: Green</li>\r\n                        <li>4: Yellow</li>\r\n                        <li>5: Orange</li>\r\n                        <li>6: Purple</li>\r\n                        <li>Any other key: White</li>\r\n                    </ul>\r\n                    <p className=\"description\">Here are some demo files and their images:</p>\r\n                    <img src=\"https://drive.google.com/uc?id=1iSGVKoWmkWlGxH-fmpq08F-pqGBn4hYG\"/>\r\n                    <img src=\"https://drive.google.com/uc?id=1Cx5ArHSjdj28fUIYHanksrSDet2hXiHm\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './general.css';\r\nimport './home.css';\r\n\r\nexport class Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"overview\">\r\n                <div className=\"intro-paragraph\">\r\n                    <p>Hey! My name is Colin and this is an overview of all my personal projects. My\r\n                        projects range from web development to IoT circuits to hand-crafted wooden\r\n                        puzzles. I was first introduced to programming when I was in the 7th grade when\r\n                        I joined a First Robotics team. Since then, code has intrigued me and I have\r\n                        taken many computer science courses and worked several types of tasks for tech\r\n                        companies. Through my experience, I have developed several projects in many\r\n                        different programming languages. I also picked up Arduino and woodworking in\r\n                        middle school which continue to spark my interest. I created this website to\r\n                        showcase my learning over the years and my passion for designing and writing\r\n                        interesting products.</p>\r\n                </div>\r\n                <div className=\"intro-image-1\">\r\n                    <img src=\"https://drive.google.com/uc?id=1gAPVDqsSTPl7ZYyondIqhuHzRJN6yJ6e\" alt=\"FLL Logo\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './general.css';\r\n\r\nexport class Simulation extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <div className=\"border jugs\">\r\n                    <h3 className=\"subtitle\">Python Jugs Puzzle</h3>\r\n                    <p><a href=\"https://github.com/colindchung/Jugs-Puzzle\" target=\"_blank\" rel=\"noopener noreferrer\">Visit project repository</a></p>\r\n                    <p>Date Created: October 25, 2017</p>\r\n                    <p>Programming Languages and Techniques Used:</p>\r\n                    <ul>\r\n                        <li>Python</li>\r\n                        <li>Object Oriented Programming</li>\r\n                    </ul>\r\n                    <p className=\"description\">I found myself stumped one day over a simple puzzle: If I have a\r\n                        3L, 5L and an 8L jug, how can I measure 4L of water in the least possible pours. I\r\n                        ponderd over this and decided to simulate this game in Python. I denoted the jugs as 0,\r\n                        1, 2 and made a program to take user input and display the jug volumes after each pour.</p>\r\n                    <img src=\"https://drive.google.com/uc?id=1D0zRYUeh5rzBlvKJdAQ9QJNnr61WwYtJ\" alt=\"Jugs demo\"/>\r\n                    <p className=\"description\">The console displays which move the user is on followed by each\r\n                        jug capacity. Each move asks the user to input which jug to spill from and which jug to\r\n                        spill into. The loop is broken when one of the jugs has a capacity of 4L.</p>                \r\n                </div>\r\n                <br/>\r\n                <br/>\r\n                <div className=\"border num-gen\">\r\n                    <h3 className=\"subtitle\">Random Number Generator</h3>\r\n                    <p><a href=\"https://github.com/colindchung/Num_Generator\" target=\"_blank\" rel=\"noopener noreferrer\">Visit project repository</a></p>\r\n                    <p>Date Created: February 6, 2019</p>\r\n                    <p>Programming Languages and Techniques Used:</p>\r\n                    <ul>\r\n                        <li>HTML</li>\r\n                        <li>CSS</li>\r\n                        <li>JavaScript</li>\r\n                        <li>Input handling</li>\r\n                    </ul>\r\n                    <img src=\"https://drive.google.com/uc?id=1l6_vtLGW4xw1vLev3w7z6TxVeV9u3hSa\" alt=\"Demo 1\"/>\r\n                    <p className=\"description\">To first learn about integrating JavaScript into web applications,\r\n                        I created a simple program. The UI is very simple, including 2 forms, a submit button and\r\n                        a display. It is linked to a Vanilla JavaScript file which is called on click of the\r\n                        button. It returns a random number less than the set maximum and with the specified\r\n                        number of decimal points. This incorporates function calls from a UI and form handling in\r\n                        a simple utility.</p>\r\n                    <img src=\"https://drive.google.com/uc?id=1lxm1-5AWtLj6CriL2--HQeLav1aPDVsV\" alt=\"Demo 2\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './general.css';\r\n\r\nexport class Utilities extends React.Component {\r\n    render() {\r\n        return (\r\n            <div class=\"main\">\r\n                <div class=\"border othello\">\r\n                    <h3 class=\"subtitle\">Custom Math Library</h3>\r\n                    <p><a href=\"https://github.com/colindchung/Math_Library\" target=\"_blank\" rel=\"noopener noreferrer\">Visit project repository</a></p>\r\n                    <p>Date Created: February 16, 2019</p>\r\n                    <p>Programming Languages and Techniques Used:</p>\r\n                    <ul>\r\n                        <li>C#</li>\r\n                        <li>.NET 2.1</li>\r\n                        <li>Generics</li>\r\n                        <li>Inheritance</li>\r\n                    </ul>\r\n                    <img src=\"https://drive.google.com/uc?id=1JARgLEBv8tWJ1XGHQg7h_WVnNG_XwhS-\" alt=\"Sample StDev function\"/>\r\n                    <p class=\"description\">I made a custom library, primarily for data science functions. Most of\r\n                        the functions i made are not available in the standard math library, or that are not\r\n                        available in the format that I like to use. I import my library class in other C# projects\r\n                        with data analysis for smooth programming. Some interesting methods I made are:</p>\r\n                    <ul class=\"description\">\r\n                        <li>Convert each entry in a list to integer, double</li>\r\n                        <li>Mean, median, mode averages</li>\r\n                        <li>Standard deviation</li>\r\n                        <li>Permutations, factorials</li>\r\n                        <li>Matrix algebra</li>\r\n                        <li>Vector algebra</li>\r\n                        <li>Area, volume</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './general.css';\r\n\r\nexport class Web extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <div className=\"border spurs\">\r\n                    <h3 className=\"subtitle\">San Antonio Spurs Website</h3>\r\n                    <p><a href=\"https://github.com/colindchung/San_Antonio_Spurs\" target=\"_blank\" rel=\"noopener noreferrer\">Visit project repository</a></p>\r\n                    <p>Date Created: February 2, 2019</p>\r\n                    <p>Programming Languages and Techniques Used:</p>\r\n                    <ul>\r\n                        <li>HTML</li>\r\n                        <li>CSS</li>\r\n                    </ul>\r\n                    <img src=\"https://drive.google.com/uc?id=1qjOXLwvTDMS563uvKRUcs24LwxRGDN9E\" alt=\"Spurs website image 1\"/>\r\n                    <p className=\"description\">I created a website about the history of my favourite sports team, the San Antonio\r\n                        Spurs. This project helped me learn fundamental HTML and CSS structure and styling basics. I have a &lt;div&gt;\r\n                        sectioned off for each signiicant era in Spurs history. The CSS integration is primarily class and id\r\n                        styling, formatting the website to be more visually appealing.</p>\r\n                    <img src=\"https://drive.google.com/uc?id=1qXjiSUkHqU88SRcRm7lnGHbiQiz7zG_O\" alt=\"Spurs website image 2\"/>\r\n                    <br/>\r\n                    <br/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './general.css';\r\n\r\nexport class Wood extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <div className=\"border stand\">\r\n                    <h3 className=\"subtitle\">Adjustable Phone Stand</h3>\r\n                    <p>Date Created: January 2018</p>\r\n                    <img src=\"https://drive.google.com/uc?id=1uOp9wYKtfQ6oq2WqigV_eOVMkwRN5VfC\" alt=\"Phone stand images\"/>\r\n                    <p className=\"description\">I made an adjustable phone stand out of wooden planks and\r\n                        dowels. It was made to fit a Samsung S5/S6 phone either vertically or horizontally.\r\n                        It also has 3 different angles which it can adjust to.</p>\r\n                    <video controls>\r\n                        <source src=\"https://drive.google.com/uc?id=1nHZJeVn1rfU-qHcLHKaybztaProlcDDR\"/>\r\n                    </video>\r\n                    <br/>\r\n                    <br/>\r\n                </div>\r\n                <br/>\r\n                <br/>\r\n                <div className=\"border puzzle1\">\r\n                    <h3 className=\"subtitle\">Stack Wood Puzzle</h3>\r\n                    <p>Date Created: August 2018</p>\r\n                    <img src=\"https://drive.google.com/uc?id=1kHzBUWrJ78CJxP0wXgE5PVUKFMpZNqRl\" alt=\"Puzzle pieces\"/>\r\n                    <p className=\"description\">This project combines my interest in woodworking and my skill\r\n                        with puzzles, specifically ones in 3D. The materials for the project were extremely\r\n                        simple: Wood, a saw and glue. I created a stack tower puzzle which only fits together\r\n                        one way. Above are the individual pieces which each consist of 9 blocked fragments\r\n                        that stack into each other. The final project, fully assembled is shown below.</p>\r\n                    <img src=\"https://drive.google.com/uc?id=1JaPzwbcl3D5vzB9qXblz1RBVa7zSLt8a\" alt=\"Assembled puzzle\"/>\r\n                    <br/>\r\n                    <br/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Arduino } from './Body/arduino';\r\nimport { Game } from './Body/game';\r\nimport { Home } from './Body/home';\r\nimport { Simulation } from './Body/simulation';\r\nimport { Utilities } from './Body/utilities';\r\nimport { Web } from './Body/web';\r\nimport { Wood } from './Body/wood';\r\n\r\nimport './index.css';\r\n\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { title: \"Personal Projects\" };\r\n        this.changeTitle = this.changeTitle.bind(this);\r\n    }\r\n\r\n    changeTitle(newName) {\r\n        this.setState({\r\n            title: newName\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"main-header\">\r\n                    <h1><strong>{ this.state.title }</strong></h1>\r\n                </div>\r\n                <div className=\"dropdown\">\r\n                    <ul>\r\n                        <li onClick={() => this.changeTitle(\"Personal Projects\")}>Home Page</li>\r\n                        <li onClick={() => this.changeTitle(\"Web Development\")}>Web Development</li>\r\n                        <li onClick={() => this.changeTitle(\"Utilities\")}>Utilities</li>\r\n                        <li onClick={() => this.changeTitle(\"Simulations\")}>Simulation</li>\r\n                        <li onClick={() => this.changeTitle(\"Game Development\")}>Game Development</li>\r\n                        <li onClick={() => this.changeTitle(\"Arduino\")}>Arduino</li>\r\n                        <li onClick={() => this.changeTitle(\"Woodworking\")}>Woodworking</li>\r\n                    </ul>\r\n                </div>\r\n                <Body title={this.state.title} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Body extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.updateBody = this.updateBody.bind(this);\r\n    }\r\n\r\n    updateBody() {\r\n        if (this.props.title === \"Personal Projects\") {\r\n            return (\r\n                <div>\r\n                    <Home />\r\n                </div>\r\n            )\r\n        } else if (this.props.title === \"Web Development\") {\r\n            return (\r\n                <div>\r\n                    <Web />\r\n                </div>\r\n            )\r\n        } else if (this.props.title === \"Utilities\") {\r\n            return (\r\n                <div>\r\n                    <Utilities />\r\n                </div>\r\n            )\r\n        } else if (this.props.title === \"Simulations\") {\r\n            return (\r\n                <div>\r\n                    <Simulation />\r\n                </div>\r\n            )\r\n        } else if (this.props.title === \"Game Development\") {\r\n            return (\r\n                <div>\r\n                    <Game />\r\n                </div>\r\n            )\r\n        } else if (this.props.title === \"Arduino\") {\r\n            return (\r\n                <div>\r\n                    <Arduino />\r\n                </div>\r\n            )\r\n        } else if (this.props.title === \"Woodworking\") {\r\n            return (\r\n                <div>\r\n                    <Wood />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.updateBody()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass ToRender extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nReactDOM.render(<ToRender />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}